name: Build script for OnePlus 13 
on:
  workflow_dispatch:
    inputs:
      CPU:
        description: "Select compilation CPU type"
        required: true
        default: 'sm8750'
      FEIL:
        description: "Device configuration"
        required: true
        default: 'oneplus_13'
      CPUD:
        description: "Processor codename"
        required: true
        default: 'sun'
      ANDROID_VERSION:
        description: "Kernel Android Version"
        required: true
        default: 'android15'
      KERNEL_VERSION:
        description: "Kernel version"
        required: true
        default: '6.6'
      KERNEL_NAME:
        description: "Custom kernel name"
        required: true
        default: '-By-Ehsan149'
      KERNEL_TIME:
       description: "Custom kernel build time (default: factory)"
       required: true
       default: '2024-12-17 23:36:49 UTC'
      enable_feature_x:
       description: "Enable KPM support"
       required: false
       default: false
       type: boolean
      enable_feature_y:
       description: "Enable lz4kd compression"
       required: false
       default: false
       type: boolean
      enable_feature_z:
       description: "Enable FengChi driver (sched_ext)"
       required: false
       default: false
       type: boolean
      
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: List GITHUB_WORKSPACE contents after checkout # DEBUG
        run: |
          echo "Listing contents of GITHUB_WORKSPACE ($GITHUB_WORKSPACE) after checkout:"
          ls -la $GITHUB_WORKSPACE

      # STEP 1: Create a temporary holding area for patches BEFORE maximize-build-space
      - name: Temporarily Preserve Custom Patches
        run: |
          echo "Creating temporary holding for custom patches..."
          if [ -d "$GITHUB_WORKSPACE/custom_patches" ]; then
            mkdir -p /tmp/my_preserved_patches
            cp -r $GITHUB_WORKSPACE/custom_patches/* /tmp/my_preserved_patches/
            echo "Custom patches temporarily preserved in /tmp/my_preserved_patches:"
            ls -la /tmp/my_preserved_patches
          else
            echo "ERROR: $GITHUB_WORKSPACE/custom_patches directory not found after checkout!"
            exit 1
          fi

      - name: Maximize build space # This might clean GITHUB_WORKSPACE/custom_patches
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192 
          temp-reserve-mb: 2048 
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - name: List GITHUB_WORKSPACE contents after Maximize Space # DEBUG
        run: |
          echo "Listing contents of GITHUB_WORKSPACE ($GITHUB_WORKSPACE) after Maximize Space:"
          ls -la $GITHUB_WORKSPACE
          echo "Checking if /tmp/my_preserved_patches still exists:"
          ls -la /tmp/my_preserved_patches || echo "/tmp/my_preserved_patches not found (this is unexpected)"
          
      - name: Configure Git
        run: |
         git config --global user.name "ehsan149"
         git config --global user.email "ehsan149@yahoo.com"

      - name: Install dependencies
        run: |
         sudo apt update && sudo apt upgrade -y
         sudo apt install -y python3 git curl patch

      - name: Install repo tool
        run: |
         mkdir -p $GITHUB_WORKSPACE/bin
         curl -sSL https://storage.googleapis.com/git-repo-downloads/repo > $GITHUB_WORKSPACE/bin/repo
         chmod a+x $GITHUB_WORKSPACE/bin/repo
         echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
         echo "REPO_TOOL_PATH=$GITHUB_WORKSPACE/bin/repo" >> $GITHUB_ENV
         repo --version || echo "WARN: repo --version failed after installation attempt."

      - name: Clone TheWildJames Patches Repo
        run: |
          git clone https://github.com/TheWildJames/kernel_patches.git TheWildJames_kernel_patches --depth=1

      - name: Initialize repo and sync
        run: |
         which repo || echo "WARN: 'which repo' did not find repo in PATH" 
         
         mkdir kernel_workspace && cd kernel_workspace
         repo init -u https://github.com/JiuGeFaCai/kernel_manifest.git -b refs/heads/oneplus/${{ github.event.inputs.CPU }} -m ${{ github.event.inputs.FEIL }}.xml --depth=1
         repo --trace sync -c -j$(nproc --all) --no-tags --no-clone-bundle --optimized-fetch --fail-fast
         rm kernel_platform/common/android/abi_gki_protected_exports_* || echo "No protected exports!"
         rm kernel_platform/msm-kernel/android/abi_gki_protected_exports_* || echo "No protected exports!"

         # STEP 2: Move preserved patches into the kernel source tree AFTER repo sync
         echo "Moving preserved patches into kernel_platform..."
         if [ -d "/tmp/my_preserved_patches" ]; then
           mkdir -p kernel_platform/my_local_patches # Create target dir inside kernel_platform
           cp -r /tmp/my_preserved_patches/* kernel_platform/my_local_patches/
           echo "Patches moved to kernel_platform/my_local_patches:"
           ls -la kernel_platform/my_local_patches
         else
           echo "ERROR: /tmp/my_preserved_patches not found! Cannot move patches."
           exit 1
         fi
         
      - name: Set up SukiSU
        run: |
         cd kernel_workspace/kernel_platform
         curl -LSs "https://raw.githubusercontent.com/ShirkNeko/SukiSU-Ultra/main/kernel/setup.sh" | bash -s susfs-dev
         cd ./KernelSU
         KSU_VERSION=$(expr $(/usr/bin/git rev-list --count main) "+" 10606)
         echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
         sed -i "s/DKSU_VERSION=12800/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile
        
      - name: Set up susfs
        run: |
           # Current directory: kernel_workspace/kernel_platform
           git clone https://gitlab.com/simonpunk/susfs4ksu.git ../susfs4ksu --depth=1 # Clone outside kernel_platform initially
           git clone https://github.com/ShirkNeko/SukiSU_patch.git ../SukiSU_patch --depth=1 # Clone outside

           cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch ./common/
           cp ../susfs4ksu/kernel_patches/fs/* ./common/fs/
           cp ../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/
           cp -r ../SukiSU_patch/other/zram/lz4k/include/linux/* ./common/include/linux
           cp -r ../SukiSU_patch/other/zram/lz4k/lib/* ./common/lib
           cp -r ../SukiSU_patch/other/zram/lz4k/crypto/* ./common/crypto
           cp -r ../SukiSU_patch/other/zram/lz4k_oplus ./common/lib/
           cd ./common

           sed -i 's/-32,12 +32,38/-32,11 +32,37/g' 50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch
           sed -i '/#include <trace\/hooks\/fs.h>/d' 50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch

           patch -p1 < 50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch || echo "WARN: SUSFS base patch may not have applied cleanly."
           cp ../../SukiSU_patch/hooks/syscall_hooks.patch ./ # Path relative to common
           patch -p1 -F 3 < syscall_hooks.patch

      - name: Apply lz4kd Patches
        if: ${{inputs.enable_feature_y }}
        run: |
          # Current directory: kernel_workspace/kernel_platform/common
          cp ../../SukiSU_patch/other/zram/zram_patch/${{ github.event.inputs.KERNEL_VERSION }}/lz4kd.patch ./
          patch -p1 -F 3 < lz4kd.patch || echo "WARN: lz4kd patch failed."
           
      - name: Add Kernel Configuration Settings
        run: |
          # Current directory: kernel_workspace/kernel_platform/common
          cd .. # Go to kernel_platform
          
          echo "CONFIG_KSU=y" >> ./common/arch/arm64/configs/gki_defconfig
          # ... (rest of your defconfig additions) ...
          echo "CONFIG_KSU_SUSFS_SUS_SU=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_MANUAL_HOOK=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_LZ4HC=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_LZ4K=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_LZ4KD=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_842=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_TCP_CONG_ADVANCED=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_TCP_CONG_BBR=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_TCP_CONG_BIC=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_TCP_CONG_WESTWOOD=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_TCP_CONG_HTCP=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_IP_NF_TARGET_TTL=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_IP6_NF_TARGET_HL=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_IP6_NF_MATCH_HL=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_IP_NF_TARGET_ECN=y" >> ./common/arch/arm64/configs/gki_defconfig
          if [ "${{ github.event.inputs.KERNEL_VERSION }}" != "5.10" ]; then
            echo "CONFIG_ZRAM_DEF_COMP_LZORLE=n" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_ZRAM_DEF_COMP_LZO=n" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_ZRAM_DEF_COMP_LZ4=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo 'CONFIG_ZRAM_DEF_COMP="lz4"' >> ./common/arch/arm64/configs/gki_defconfig
          fi
          echo "CONFIG_RCU_TRACE=n" >> ./common/arch/arm64/configs/gki_defconfig

          sudo sed -i 's/check_defconfig//' ./common/build.config.gki
          cd common # Now in kernel_workspace/kernel_platform/common
          git add -A && git commit -a -m "Update defconfig with SukiSU and new features" || echo "No changes to commit in common for defconfig."
      
      - name: Add KPM Configuration Settings
        if: ${{inputs.enable_feature_x }}
        run: |
          # Current directory: kernel_workspace/kernel_platform/common
          cd .. # Go to kernel_platform
          echo "CONFIG_KPM=y" >> ./common/arch/arm64/configs/gki_defconfig
          sudo sed -i 's/check_defconfig//' ./common/build.config.gki
          cd common # Back to kernel_workspace/kernel_platform/common
          git add -A && git commit -a -m "Add KPM config" || echo "No changes to commit in common for KPM."

      - name: Apply Custom ECN and TCP Pacing Patches
        run: |
          # Current directory is kernel_workspace/kernel_platform/common
          echo "Applying custom patches from ../my_local_patches/"
          ls -la ../my_local_patches/ # DEBUG: Check if patches are here

          cp ../my_local_patches/force_ecn.patch ./
          patch -p1 --no-backup-if-mismatch < force_ecn.patch || echo "WARN: force_ecn.patch failed."
          
          cp ../my_local_patches/tcp_pacing.patch ./
          patch -p1 --no-backup-if-mismatch < tcp_pacing.patch || echo "WARN: tcp_pacing.patch failed."

      - name: Apply Hide Stuff Patch
        run: |
          # Current directory is kernel_workspace/kernel_platform/common
          # TheWildJames_kernel_patches was cloned to $GITHUB_WORKSPACE/TheWildJames_kernel_patches
          # Path from common is ../../../TheWildJames_kernel_patches
          cp ../../../TheWildJames_kernel_patches/69_hide_stuff.patch ./
          patch -p1 --no-backup-if-mismatch < 69_hide_stuff.patch || echo "WARN: 69_hide_stuff.patch failed."
          
      - name: Add make name
        run: |
         # Current directory is kernel_workspace/kernel_platform/common
         cd .. # Go to kernel_platform
         sed -i "s/^\(res=\"\${res}\)\(\$(cat \"\${file}\")\)\"$/\1\2${{ github.event.inputs.KERNEL_NAME }}\"/" ./common/scripts/setlocalversion || echo "Failed to modify setlocalversion"

      - name: Add sched_ext (FengChi driver)
        if: ${{inputs.enable_feature_z }}
        run: |
         # Current directory is kernel_workspace/kernel_platform
         git clone https://github.com/HanKuCha/sched_ext.git ./sched_ext_temp --depth=1
         cp -r ./sched_ext_temp/* ./common/kernel/sched
         rm -rf ./sched_ext_temp
         
      - name: Set Kernel build timestamp
        run: |
          export SOURCE_DATE_EPOCH=$(date -d "${{ github.event.inputs.KERNEL_TIME }}" +%s)
          echo "SOURCE_DATE_EPOCH=$SOURCE_DATE_EPOCH" >> $GITHUB_ENV
          
      - name: Build Kernel
        run: |
           # Current directory is kernel_workspace/kernel_platform
           export SOURCE_DATE_EPOCH=${SOURCE_DATE_EPOCH}
           tools/bazel run --config=fast --config=stamp --lto=thin --verbose_failures //common:kernel_aarch64_dist -- --dist_dir=dist

      - name: Make AnyKernel3 (Patch Image)
        run: |
         # Current directory is kernel_workspace/kernel_platform
         cd dist/
         curl -LO https://github.com/ShirkNeko/SukiSU_KernelPatch_patch/releases/download/0.11-beta/patch_linux
         chmod +x patch_linux
         ./patch_linux
         rm -f Image
         mv oImage Image
         
      - name: Prepare AnyKernel3 Zip
        run: |
         # Current directory is kernel_workspace/kernel_platform/dist
         cd $GITHUB_WORKSPACE 
         git clone https://github.com/HanKuCha/AnyKernel3.git AnyKernel3_Package --depth=1      
         rm -rf ./AnyKernel3_Package/.git
         rm -rf ./AnyKernel3_Package/push.sh
         
         cp $GITHUB_WORKSPACE/kernel_workspace/kernel_platform/dist/Image ./AnyKernel3_Package/
         
         cd AnyKernel3_Package
         zip -r9 ../SukiSu_${{ env.KSUVER }}_${{ github.event.inputs.FEIL }}.zip .
         cd ..

      - name: Upload AnyKernel3 Zip
        uses: actions/upload-artifact@v4
        with:
         name: SuKiSu_${{ env.KSUVER }}_${{ github.event.inputs.FEIL }}_AnyKernel3_Zip
         path: SukiSu_${{ env.KSUVER }}_${{ github.event.inputs.FEIL }}.zip
         
      - name: Upload Raw Image
        uses: actions/upload-artifact@v4
        with:
         name: Raw_Image_SuKiSu_${{ env.KSUVER }}_${{ github.event.inputs.FEIL }}
         path: kernel_workspace/kernel_platform/dist/Image
