name: Build script for OnePlus 13 
on:
  workflow_dispatch:
    inputs:
      CPU:
        description: "Select compilation CPU type"
        required: true
        default: 'sm8750'
      FEIL:
        description: "Device configuration"
        required: true
        default: 'oneplus_13'
      CPUD:
        description: "Processor codename"
        required: true
        default: 'sun'
      ANDROID_VERSION:
        description: "Kernel Android Version"
        required: true
        default: 'android15'
      KERNEL_VERSION:
        description: "Kernel version"
        required: true
        default: '6.6'
      KERNEL_NAME:
        description: "Custom kernel name"
        required: true
        default: '-By-Ehsan149'
      KERNEL_TIME:
       description: "Custom kernel build time (default: factory)"
       required: true
       default: '2024-12-17 23:36:49 UTC'
      enable_feature_x:
       description: "Enable KPM support"
       required: false
       default: false
       type: boolean
      enable_feature_y:
       description: "Enable lz4kd compression"
       required: false
       default: false
       type: boolean
      enable_feature_z:
       description: "Enable FengChi driver (sched_ext)"
       required: false
       default: false
       type: boolean
      
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          
      - name: Configure Git
        run: |
         git config --global user.name "ehsan149"
         git config --global user.email "ehsan149@yahoo.com"

      - name: Install dependencies
        run: |
         sudo apt update && sudo apt upgrade -y
         sudo apt install -y python3 git curl patch # NEW: Added 'patch' explicitly

      # NEW STEP: Clone repository for "Hide Stuff" patches
      - name: Clone TheWildJames Patches Repo
        run: |
          git clone https://github.com/TheWildJames/kernel_patches.git TheWildJames_kernel_patches --depth=1
          echo "NEW: Cloned TheWildJames/kernel_patches for Hide Stuff patch"

      - name: Initialize repo and sync
        run: |
         mkdir kernel_workspace && cd kernel_workspace
         repo init -u https://github.com/JiuGeFaCai/kernel_manifest.git -b refs/heads/oneplus/${{ github.event.inputs.CPU }} -m ${{ github.event.inputs.FEIL }}.xml --depth=1
         repo --trace sync -c -j$(nproc --all) --no-tags --no-clone-bundle --optimized-fetch --fail-fast # MODIFIED: Added more repo sync options
         rm kernel_platform/common/android/abi_gki_protected_exports_* || echo "No protected exports!"
         rm kernel_platform/msm-kernel/android/abi_gki_protected_exports_* || echo "No protected exports!"
         
      - name: Set up SukiSU
        run: |
         cd kernel_workspace/kernel_platform
         curl -LSs "https://raw.githubusercontent.com/ShirkNeko/SukiSU-Ultra/main/kernel/setup.sh" | bash -s susfs-dev
         cd ./KernelSU
         KSU_VERSION=$(expr $(/usr/bin/git rev-list --count main) "+" 10606)
         echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
         export KSU_VERSION=$KSU_VERSION
         sed -i "s/DKSU_VERSION=12800/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile
        
      - name: Set up susfs
        run: |
           cd kernel_workspace
           git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }} --depth=1 # MODIFIED: Added --depth=1
           git clone https://github.com/ShirkNeko/SukiSU_patch.git --depth=1 # MODIFIED: Added --depth=1

           cd kernel_platform        
           cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch ./common/
           cp ../susfs4ksu/kernel_patches/fs/* ./common/fs/
           cp ../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/
           #lz4k
           cp -r ../SukiSU_patch/other/zram/lz4k/include/linux/* ./common/include/linux
           cp -r ../SukiSU_patch/other/zram/lz4k/lib/* ./common/lib
           cp -r ../SukiSU_patch/other/zram/lz4k/crypto/* ./common/crypto
           cp -r ../SukiSU_patch/other/zram/lz4k_oplus ./common/lib/
           # Apply patches
           cd ./common

           # IMPORTANT: Modifying patches with sed is risky. Consider maintaining your own patched version.
           sed -i 's/-32,12 +32,38/-32,11 +32,37/g' 50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch
           sed -i '/#include <trace\/hooks\/fs.h>/d' 50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch

           patch -p1 < 50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch || echo "WARN: SUSFS base patch may not have applied cleanly after sed modifications."
           cp ../../SukiSU_patch/hooks/syscall_hooks.patch ./
           patch -p1 -F 3 < syscall_hooks.patch
           echo "مرحله تنظیمات SUSFS و پچ‌های اولیه SukiSU انجام شد"

      - name: Apply lz4kd Patches
        if: ${{inputs.enable_feature_y }}
        run: |
          echo "NEW: Applying lz4kd patches if enabled..."
          cd kernel_workspace/kernel_platform/common
          cp ../../SukiSU_patch/other/zram/zram_patch/${{ github.event.inputs.KERNEL_VERSION }}/lz4kd.patch ./
          patch -p1 -F 3 < lz4kd.patch || echo "WARN: lz4kd patch may not have applied cleanly."
           
      - name: Add Kernel Configuration Settings # MODIFIED: Renamed and consolidated config additions
        run: |
          echo "NEW: Adding various kernel configurations to defconfig..."
          cd kernel_workspace/kernel_platform
          
          # Base SukiSU/SUSFS configs (from your original script)
          echo "CONFIG_KSU=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_SU=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_MANUAL_HOOK=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_LZ4HC=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_LZ4K=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_LZ4KD=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_842=y" >> ./common/arch/arm64/configs/gki_defconfig

          # NEW: Google BBR Support
          echo "CONFIG_TCP_CONG_ADVANCED=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_TCP_CONG_BBR=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "NEW: Added Google BBR support to defconfig."

          # NEW: Unlimited Hotspot Support
          echo "CONFIG_IP_NF_TARGET_TTL=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_IP6_NF_TARGET_HL=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_IP6_NF_MATCH_HL=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "NEW: Added Unlimited Hotspot support to defconfig."

          # NEW: Forced ECN Support (defconfig part)
          echo "CONFIG_IP_NF_TARGET_ECN=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "NEW: Added ECN support to defconfig."
          
          # NEW: LZ4 as default ZRAM compression (if kernel is not 5.10, current default is 6.6)
          if [ "${{ github.event.inputs.KERNEL_VERSION }}" != "5.10" ]; then
            echo "CONFIG_ZRAM_DEF_COMP_LZORLE=n" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_ZRAM_DEF_COMP_LZO=n" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_ZRAM_DEF_COMP_LZ4=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo 'CONFIG_ZRAM_DEF_COMP="lz4"' >> ./common/arch/arm64/configs/gki_defconfig
            echo "NEW: Set LZ4 as default ZRAM compression algorithm."
          fi
          
          # NEW: Disable RCU Trace (minor optimization)
          echo "CONFIG_RCU_TRACE=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo "NEW: Disabled RCU Trace in defconfig."

          #Remove check_defconfig (from your original script)
          sudo sed -i 's/check_defconfig//' ./common/build.config.gki
          
          # Git commit (from your original script, happens after all defconfig changes now)
          cd common
          git add -A && git commit -a -m "Update defconfig with SukiSU and new features" || echo "No changes to commit in common for defconfig."
      
      - name: Add KPM Configuration Settings
        if: ${{inputs.enable_feature_x }}
        run: |
          echo "NEW: Adding KPM config if enabled..."
          cd kernel_workspace/kernel_platform
          echo "CONFIG_KPM=y" >> ./common/arch/arm64/configs/gki_defconfig
         
          #Remove check_defconfig (from your original script)
          sudo sed -i 's/check_defconfig//' ./common/build.config.gki
          cd common
          git add -A && git commit -a -m "Add KPM config" || echo "No changes to commit in common for KPM."

      - name: Apply Custom ECN and TCP Pacing Patches
        run: |
          echo "NEW: Applying custom ECN and TCP Pacing patches..."
          echo "Current directory: $(pwd)"
          cd kernel_workspace/kernel_platform/common
          echo "Changed to directory: $(pwd)"
          
          echo "DEBUG: Listing contents of GITHUB_WORKSPACE (../../../):"
          ls -la ../../../
          
          echo "DEBUG: Listing contents of custom_patches directory from GITHUB_WORKSPACE:"
          ls -la ../../../custom_patches/
          
          echo "Attempting to apply force_ecn.patch..."
          # Assuming force_ecn.patch is in a 'custom_patches' dir at the root of your repo
          cp ../../../custom_patches/force_ecn.patch ./
          patch -p1 --no-backup-if-mismatch < force_ecn.patch || echo "WARN: force_ecn.patch may not have applied cleanly. Check context and line numbers."
          
          echo "Attempting to apply tcp_pacing.patch..."
          # Assuming tcp_pacing.patch is in a 'custom_patches' dir at the root of your repo
          cp ../../../custom_patches/tcp_pacing.patch ./
          patch -p1 --no-backup-if-mismatch < tcp_pacing.patch || echo "WARN: tcp_pacing.patch may not have applied cleanly. Check context and line numbers."

      - name: Apply Hide Stuff Patch
        run: |
          echo "NEW: Applying Hide Stuff patch..."
          cd kernel_workspace/kernel_platform/common
          # Path is relative to kernel_workspace/kernel_platform/common
          # TheWildJames_kernel_patches was cloned at the GITHUB_WORKSPACE root.
          # 69_hide_stuff.patch is in the root of TheWildJames_kernel_patches repo.
          cp ../../../TheWildJames_kernel_patches/69_hide_stuff.patch ./
          patch -p1 --no-backup-if-mismatch < 69_hide_stuff.patch || echo "WARN: 69_hide_stuff.patch may not have applied cleanly."
          
      - name: Add make name
        run: |
         cd kernel_workspace/kernel_platform
         # MODIFIED: Be careful with hardcoding versions like "android15-8-g013ec21bba94-abogki383916444"
         # It's better to let the build system generate most of it and append your custom name.
         # The original sed command was very specific. This is a simplified approach to append your KERNEL_NAME.
         # You might need to adjust this based on the original setlocalversion script's behavior.
         sed -i "s/^\(res=\"\${res}\)\(\$(cat \"\${file}\")\)\"$/\1\2${{ github.event.inputs.KERNEL_NAME }}\"/" ./common/scripts/setlocalversion || echo "Failed to modify setlocalversion for KERNEL_NAME"
         # A simpler alternative if the above is problematic:
         # sed -i "/^res=/ s/$/${{ github.event.inputs.KERNEL_NAME }}/" ./common/scripts/setlocalversion

      - name: Add sched_ext (FengChi driver)
        if: ${{inputs.enable_feature_z }}
        run: |
         echo "NEW: Adding sched_ext (FengChi driver) if enabled..."
         cd kernel_workspace/kernel_platform/
         git clone https://github.com/HanKuCha/sched_ext.git --depth=1 # MODIFIED: Added --depth=1
         cp -r ./sched_ext/* ./common/kernel/sched
         rm -rf ./sched_ext/.git # This is good
         cd common/kernel/sched
         
      - name: Set Kernel build timestamp
        run: |
          export SOURCE_DATE_EPOCH=$(date -d "${{ github.event.inputs.KERNEL_TIME }}" +%s)
          echo "SOURCE_DATE_EPOCH=$SOURCE_DATE_EPOCH" >> $GITHUB_ENV
          
      - name: Build Kernel
        run: |
           export SOURCE_DATE_EPOCH=${SOURCE_DATE_EPOCH}
           cd kernel_workspace/kernel_platform
           # Bazel arguments from FerGus786 for reference: --jobs=$(nproc --all) --lto=thin --verbose_failures
           # Your current command: tools/bazel run --config=fast --config=stamp --lto=thin //common:kernel_aarch64_dist -- --dist_dir=dist
           # These seem compatible. Adding verbose_failures might be useful for debugging.
           tools/bazel run --config=fast --config=stamp --lto=thin --verbose_failures //common:kernel_aarch64_dist -- --dist_dir=dist

      - name: Make AnyKernel3 (Patch Image)
        # This step's name was "Make AnyKernel3" in your original script. Renamed for clarity.
        run: |
         cd kernel_workspace/kernel_platform/dist/
         curl -LO https://github.com/ShirkNeko/SukiSU_KernelPatch_patch/releases/download/0.11-beta/patch_linux
         chmod +x patch_linux
         ./patch_linux # This script's behavior is critical. It seems to modify Image and output oImage.
         rm -f Image
         mv oImage Image # Assuming oImage is the patched one.
         
      - name: Prepare AnyKernel3 Zip
        # This step's name was also "Make AnyKernel3". Renamed for clarity.
        run: |
         # MODIFIED: Clone AnyKernel3 to a standard location, not inside dist.
         git clone https://github.com/HanKuCha/AnyKernel3.git AnyKernel3_Package --depth=1      
         rm -rf ./AnyKernel3_Package/.git
         rm -rf ./AnyKernel3_Package/push.sh
         
         # MODIFIED: Copy the final Image from the dist directory.
         cp kernel_workspace/kernel_platform/dist/Image ./AnyKernel3_Package/
         # IMPORTANT: You stated you don't need dtbo.img. If you ever do, copy it here:
         # cp kernel_workspace/kernel_platform/dist/dtbo.img ./AnyKernel3_Package/
         
         # MODIFIED: Create the zip file from the AnyKernel3_Package directory.
         cd AnyKernel3_Package
         zip -r9 ../SukiSu_${{ env.KSUVER }}_${{ github.event.inputs.FEIL }}.zip .
         cd .. # Go back to GITHUB_WORKSPACE for upload paths

      - name: Upload AnyKernel3 Zip
        # MODIFIED: Upload the created zip file.
        uses: actions/upload-artifact@v4
        with:
         name: SuKiSu_${{ env.KSUVER }}_${{ github.event.inputs.FEIL }}_AnyKernel3_Zip
         path: SukiSu_${{ env.KSUVER }}_${{ github.event.inputs.FEIL }}.zip # Path to the zip file
         
      - name: Upload Raw Image
        # MODIFIED: Changed artifact name for clarity.
        uses: actions/upload-artifact@v4
        with:
         name: Raw_Image_SuKiSu_${{ env.KSUVER }}_${{ github.event.inputs.FEIL }}
         path: kernel_workspace/kernel_platform/dist/Image
